#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
#=================================================

name:  CORE-ALL

on:
  workflow_call:
    inputs:
      WRT_REPO_URL:
        required: true
        type: string
      WRT_REPO_BRANCH:
        required: true
        type: string
      WRT_REPO_Commit_Hash:
        required: true
        type: string
      WRT_CONFIG:
        required: true
        type: string
      WRT_DIY_SETTING:
        required: true
        type: string
      WRT_DIY_FEEDS:
        required: true
        type: string
        default: diy_feeds.sh
      WRT_GENERAL_CONFIG:
        required: true
        type: string
      WRT_DIYPackages:
        required: true
        type: string
      WRT_RELEASE_FIRMWARE:
        required: true
        type: boolean
      WRT_DEFAULT_LANIP:
        required: true
        type: string
      WRT_MINE_SAY:
        required: true
        type: string
      WRT_TOKEN_DINGDING:
        required: false
        type: string
    secrets:
      DINGDING_TOKEN: 
        required: false
      # UPLOAD_FIRMWARE_DIR:
      #   required: false
      #   type: boolean
      #   default: true
        
#环境变量配置
env:
  DINGDING_TOKEN: ${{ secrets.DINGDING_TOKEN }}
  WRT_REPO_URL: ${{ inputs.WRT_REPO_URL }}
  WRT_REPO_BRANCH: ${{ inputs.WRT_REPO_BRANCH }}
  WRT_REPO_Commit_Hash: ${{inputs.WRT_REPO_Commit_Hash}}
  WRT_CONFIG: ${{inputs.WRT_CONFIG}}           # 配置文件
  WRT_DIY_SETTING: ${{ inputs.WRT_DIY_SETTING }}           # 自定义配置
  WRT_DIY_FEEDS: ${{ inputs.WRT_DIY_FEEDS || 'diy_feeds.sh' }}                         # 主要用于更新Feeds
  WRT_GENERAL_CONFIG: ${{ inputs.WRT_GENERAL_CONFIG }}     # 通用配置
  WRT_DIYPackages: ${{inputs.WRT_DIYPackages}}          # 自定义包配置
  WRT_RELEASE_FIRMWARE: ${{inputs.WRT_RELEASE_FIRMWARE}} # 发布固件
  WRT_DEFAULT_LANIP: ${{inputs.WRT_DEFAULT_LANIP}}       # 默认lanIP
  WRT_MINE_SAY: ${{inputs.WRT_MINE_SAY}} 
  WRT_DIR_CONFIGS: Config                             # 自定义配置文件夹
  WRT_DIR_SCRIPTS: Scripts                            # 脚本文件夹
  UPLOAD_FIRMWARE_DIR: true
  TZ: Asia/Shanghai                               # 默认时区
  IS_RESET_PASSWORD: true                         # 是否把密码重置为空
  UPLOAD_BIN_DIR: false                           # 是否上传编译后的bin目录，因整理编译后的文件设置了UPLOAD_FIRMWARE_DIR，所以不上传整个bin目录
  IS_RESIZE_SPACE: false                          # 是否扩容空间，一般编译内容不多，可以不扩容，减少资源浪费
  CACHE_TOOLCHAIN: true
  CLASH_KERNEL: amd64
  FREE_UP_DISK: true
  WRT_HAS_WIFI: true
  UPLOAD_BIN_DIR_WSS: false


  
#CI权限
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

    - name: Check Server Performance (检查服务器性能)
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT
          
    - name: Check ENV (检查环境)
      run: |
        echo "编译说明：${{ env.WRT_MINE_SAY }}"
        WRT_HAS_WIFI=true
        WRT_HAS_WIFI_TEXT="有WIFI"
        if echo "$WRT_CONFIG" | grep -q "NOWIFI\|WIFINO\|NO-WIFI\|WIFI-NO"; then
          WRT_HAS_WIFI=false
          WRT_HAS_WIFI_TEXT="无WIFI"
        fi
        echo "WRT_HAS_WIFI=$WRT_HAS_WIFI" >> $GITHUB_ENV
        echo "WRT_HAS_WIFI_TEXT=$WRT_HAS_WIFI_TEXT" >> $GITHUB_ENV
        WRT_HAS_LITE=false
        WRT_HAS_LITE_TEXT="[常规版]"
        if echo "$WRT_CONFIG" | grep -q "lite\|LITE"; then
          WRT_HAS_LITE=true
          WRT_HAS_LITE_TEXT="[精简版]"
        fi
        echo "WRT_HAS_LITE=$WRT_HAS_LITE" >> $GITHUB_ENV
        echo "WRT_HAS_LITE_TEXT=$WRT_HAS_LITE_TEXT" >> $GITHUB_ENV
        
    - name: Check DINGDING_TOKEN (检查钉钉TOKEN)
      run: |
        echo "钉钉TOKEN_secrets: ${{secrets.DINGDING_TOKEN}}"
        echo "钉钉TOKEN_env: ${{env.DINGDING_TOKEN}}"
        if [ -n "${{inputs.WRT_TOKEN_DINGDING}}" ]; then
            echo "DINGDING_TOKEN=${{inputs.WRT_TOKEN_DINGDING}}" >> $GITHUB_ENV
            echo "【LinInfo】配置TOKEN_DINGDING：${{inputs.WRT_TOKEN_DINGDING}}"
        fi
        
    - name: Combine Disks (合并磁盘)
      uses: easimon/maximize-build-space@master
      if: env.IS_RESIZE_SPACE == true || env.IS_RESIZE_SPACE == 'true'
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout (下载当前源码)
      uses: actions/checkout@master

    - name: Check Scripts (搜索脚本并配置权限)
      run: |
        echo "【LinInfo】配置脚本执行权限..."
        find ./ -maxdepth 3 -type f -iregex ".*\(txt\|sh\)$" -exec dos2unix {} \; -exec chmod +x {} \;

    - name: config git (修改git下载缓冲大小)
      run: |
        git config --global http.postBuffer 524288000
        git config --global http.lowSpeedLimit 0
        git config --global http.lowSpeedTime 999999

    - name: Clone Source Code (克隆源代码)
      run: |
        readme_demo=$GITHUB_WORKSPACE/$WRT_DIR_SCRIPTS/readme.txt
        echo "release_desc=$(cat $readme_demo)" >> $GITHUB_ENV

    - name: Upload Firmware To Release(发布固件)
      if: steps.compile.outputs.status == 'success' && (env.WRT_RELEASE_FIRMWARE == true || env.WRT_RELEASE_FIRMWARE == 'true')
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ env.COMPILE_DATE_HOUR }} for ${{ env.DEVICE_SUBTARGET }}
        tag_name: ${{ env.COMPILE_DATE_HOUR }}_${{ env.DEVICE_SUBTARGET }}
        files: ${{ env.OPENWRT_PATH }}/upload/*.*
        body: |
          **This is OpenWrt Firmware for ${{ env.DEVICE_PROFILE }}**
          ### 📒 固件信息(${{ env.WRT_HAS_WIFI_TEXT }})
          - ${{ env.WRT_HAS_WIFI_TEXT }}带有线NSS的${{ env.VERSION_KERNEL }}内核固件
          - 💻 这是 ${{ env.DEVICE_SUBTARGET }} 平台使用的 OpenWrt ${{ env.WRT_HAS_LITE_TEXT }}固件
          - 💻 适配设备: ${{ env.DEVICE_PROFILE }}
          - 💻 设备架构：${{ env.DEVICE_ARCH }}
          - ⚽ 固件源码: ${{ env.WRT_REPO_URL }}
          - 💝 源码分支: ${{ env.WRT_REPO_BRANCH }}
          - 🌐 默认地址: ${{ env.WRT_DEFAULT_LANIP }}
          - 🔑 默认密码: 无 | password
          ### 🧊 固件版本
          - 固件内核：${{ env.VERSION_KERNEL }}
          - 固件编译前最后一次➦[主源码](${{ env.WRT_REPO_URL }})更新记录
          - ${{ env.VERSION_INFO }}
          ### ---- ####
          ${{ env.release_desc }}
