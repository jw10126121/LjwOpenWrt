#CI项目
name: DEFAULT

#CI计划
on:
  #手动编译
  workflow_dispatch:
    inputs:
      choose_config:
        description: '部署环境'
        required: true
        type: choice
        options:
          - IPQ60XX-NOWIFI
          - IPQ60XX-NOWIFI_lite
          - MT6000
      WRT_DEFAULT_LANIP:
        description: '配置LAN-IP'
        required: false
        type: string
        default: '192.168.0.1'
      WRT_RELEASE_FIRMWARE:
        description: '发布firmware'
        required: false
        type: boolean
        default: true
      WHAT_MY_SAY:
        description: '编译说明'
        required: false
        type: string
        default: ''
      WRT_REPO_Commit_Hash:
        description: '历史版本HASH'
        required: false
        type: string
        default: ''


#CI权限
permissions: write-all

#CI任务
jobs:
  config:
    name: ${{ inputs.choose_config }}
    runs-on: ubuntu-latest
    outputs:
      TARGET_CONFIG: ${{ steps.set_config.outputs.TARGET_CONFIG }}
      WRT_CONFIG: ${{ steps.set_config.outputs.WRT_CONFIG }}
      WRT_DIY_SETTING: ${{ steps.set_config.outputs.WRT_DIY_SETTING }}
      WRT_GENERAL_CONFIG: ${{ steps.set_config.outputs.WRT_GENERAL_CONFIG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ${{ inputs.choose_config }}
        id: set_config
        run: |
          case ${{ inputs.choose_config }} in
            IPQ60XX-NOWIFI)
              echo "TARGET_CONFIG=IPQ60XX-NOWIFI" >> $GITHUB_ENV
              echo "WRT_CONFIG=IPQ60XX-NOWIFI.txt" >> $GITHUB_ENV
              echo "WRT_DIY_SETTING=diy_config.sh" >> $GITHUB_ENV
              echo "WRT_GENERAL_CONFIG=GENERAL.txt" >> $GITHUB_ENV
              ;;
            IPQ60XX-NOWIFI_lite)
              echo "TARGET_CONFIG=IPQ60XX-NOWIFI_lite" >> $GITHUB_ENV
              echo "WRT_CONFIG=IPQ60XX-NOWIFI_lite.txt" >> $GITHUB_ENV
              echo "WRT_DIY_SETTING=diy_config.sh" >> $GITHUB_ENV
              echo "WRT_GENERAL_CONFIG=GENERAL.txt" >> $GITHUB_ENV
              ;;
            MT6000)
              echo "TARGET_CONFIG=MT6000" >> $GITHUB_ENV
              echo "WRT_CONFIG=MT6000.txt" >> $GITHUB_ENV
              echo "WRT_DIY_SETTING=diy_config.sh" >> $GITHUB_ENV
              echo "WRT_GENERAL_CONFIG=GENERAL.txt" >> $GITHUB_ENV
              ;;
            *)
              echo "Invalid configuration selected"
              exit 1
              ;;
          esac

      - name: 
        uses: ./.github/workflows/CUSTOM.yml
        with:
          WRT_REPO_URL: https://github.com/coolsnowwolf/lede
          # 编译分支
          WRT_REPO_BRANCH: master
          # 编译指定版本
          WRT_REPO_Commit_Hash: ${{ inputs.WRT_REPO_Commit_Hash }}
          # DIY配置文件
          WRT_CONFIG: ${{ env.WRT_CONFIG }}
          # 通用配置
          WRT_GENERAL_CONFIG: ${{ env.WRT_GENERAL_CONFIG }}
          # DIY脚本
          WRT_DIY_SETTING: ${{ env.WRT_DIY_SETTING }}
          # DIY包配置
          WRT_DIYPackages: Packages.sh
          # FEED配置
          WRT_DIY_FEEDS: diy_feeds.sh
          # 是否发布
          WRT_RELEASE_FIRMWARE: ${{ inputs.WRT_RELEASE_FIRMWARE }} # 发布固件
          # 默认LAN-IP
          WRT_DEFAULT_LANIP: ${{ inputs.WRT_DEFAULT_LANIP }}
          # 钉钉TOKEN，用于推送下载文件
          # WRT_TOKEN_DINGDING: ${{ secrets.TOKEN_DINGDING }}
          # 编译说明
          WRT_MINE_SAY: ${{ inputs.WHAT_MY_SAY }}
