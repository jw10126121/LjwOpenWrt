#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com  
#=================================================

name:  Lin_RedMi_AC2100

# 配置触发条件
on:
  release:
    types: [published]
  push:
    branches:
     - master
    paths:
     - 'ljw_redmi_ac2100.config'

#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: ljw_redmi_ac2100.config
  DIYCONFIG: diyconfig_redmi_ac2100.sh
  FREE_UP_DISK: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  SSH_ACTIONS: false
  TZ: Asia/Shanghai
  Feed_Path: feeds.conf.default

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

    #- name: 微信通知
    #  run: curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=${{ env.FILE_NAME }}开始编译

    - name: 下载源码
      uses: actions/checkout@master

    - name: 修改git下载缓冲大小
      run: git config --global http.postBuffer 524288000

    - name: 初始化环境 Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone源代码 # 克隆源代码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        sed -i "s/#src-git helloworld/src-git helloworld/g" $Feed_Path
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        git clone https://github.com/tty228/luci-app-serverchan.git package/openwrt-packages/luci-app-serverchan
        useVersionInfo=$(git show -s --date=short --format="编译前的最后一次[➦主源码](https://github.com/coolsnowwolf/lede)更新记录:<br/>更新人: %an<br/>更新时间: %cd<br/>更新内容: %s<br/>哈希值: %H")
        echo "::set-env name=useVersionInfo::$useVersionInfo"
        echo "::set-env name=DATE::$(date "+%Y-%m-%d·%H:%M:%S")"

    # - name: 下载Lean源码并设置Feeds
    #   run: |
    #     chmod +x linOpenwrtUpdateCodeAndFeeds.sh && ./linOpenwrtUpdateCodeAndFeeds.sh 1 0 1

    - name: 加载配置 Configuration Customization
      run: |
        [ -e files ] && mv files openwrt/files
        rm -rf ./openwrt/.config*
        if [ -e $CONFIG_FILE ]; then
          echo '查到配置文件，复制到.config中'
          cp -f $CONFIG_FILE openwrt/.config;
          
        fi
        
    - name: 加载自定义配置 Configuration Customization
      run: |
        echo $PWD
        if [ -e $DIYCONFIG ]; then
          echo '查到配置文件，复制到openwrt中，并运行'
          cp -f $DIYCONFIG openwrt/$DIYCONFIG
          cd openwrt
          chmod +x $DIYCONFIG && ./$DIYCONFIG
          cd ..;
        fi

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        

    - name: 编译固件 Build firmware
      working-directory: ./openwrt
      run: |
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        echo -e "$(nproc) 线程编译设备：$(cat DEVICE_NAME)"
        make -j$(nproc) V=s
        [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%Y%m%d%H%M")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        # rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: 保存固件Bin，上传到Github
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: Lin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 上传固件到奶牛快传cowtransfer #奶牛快传
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-env name=COWTRANSFER_URL::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
        echo "🔗 [Cowtransfer](${{ env.COWTRANSFER_URL }})" >> release.txt
        echo "::set-output name=status::success"

    # - name: 创建稳定版
    #   uses: ncipollo/release-action@v1
    #   if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
    #   with:
    #     name: Lin_${{ env.DEVICE_NAME }}${{ env.FILE_DATE }} 🚀 | 自动编译
    #     allowUpdates: true
    #     tag: x64稳定版
    #     commit: master
    #     token: ${{ secrets.RELEASES_TOKEN }}
    #     body: |
    #       ${{ env.useVersionInfo }}
    #     artifacts: ${{ env.FIRMWARE }}/*

    - name: 微信推送
      if: steps.organize.outputs.status == 'success' && !cancelled()
      run: |
        curl https://sc.ftqq.com/${{ secrets.ServerChan }}.send?text=Lin${{ env.DEVICE_NAME }}&desp=${{ COWTRANSFER_URL }}






