#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com  
#=================================================

name:  ax18

on:
  workflow_dispatch:
  schedule:
    - cron: 0 3 * * *
    
# # 配置触发条件
# on:
#   release:
#     types: [published]
#   push:
#     branches:
#      - master
#     paths:
#      - 'ax18.config'
# #  schedule:
# #    - cron: 0 8 * * 5
#   watch:
#     types: [started]

#环境变量配置
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: ax18.config
  DIYCONFIG: diyconfig_ax18.sh
  DIY_SOURCE_CODE: diy_code.sh
  CLASH_KERNEL: amd64
  CACHE_TOOLCHAIN: true
  FREE_UP_DISK: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: AX18
  TZ: Asia/Shanghai
  
#CI权限
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

    - name: Check Server Performance (检查服务器性能)
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization Environment (初始化环境)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks (合并磁盘)
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout (下载当前源码)
      uses: actions/checkout@master

    - name: 修改git下载缓冲大小
      run: |
        git config --global http.postBuffer 524288000
        git config --global http.lowSpeedLimit 0
	git config --global http.lowSpeedTime 999999

    - name: Clone Source Code (克隆源代码)
      run: |
        df -hT $GITHUB_WORKSPACE
        # git clone $REPO_URL -b $REPO_BRANCH openwrt
        echo "克隆源代码：【$REPO_BRANCH】$REPO_URL"
        git clone --depth=1 --single-branch --branch $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_INFO=$(git show -s --date=short --format="作者: %an<br/>时间: %cd<br/>内容: %s<br/>hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV
        if [[ $REPO_URL == *"lede"* ]]; then
            VERSION_KERNEL=$(grep -oP 'LINUX_KERNEL_HASH-\K[0-9]+\.[0-9]+\.[0-9]+' include/kernel-6.1)
            echo "内核版本：VERSION_KERNEL"
        fi
        echo "处理源代码脚本执行：$DIY_SOURCE_CODE"
        # openwrt目录下操作
        chmod +x $DIY_SOURCE_CODE && ./$DIY_SOURCE_CODE openwrt

    - name: Generate Variables (加载配置)
      run: |
        echo '移除所有.config并添加新的.config'
        rm -rf ./openwrt/.config*
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cd $OPENWRT_PATH
        make defconfig > /dev/null 2>&1
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV
        
    - name: Configuration Customization (加载自定义配置)
      run: |
        echo $PWD
        if [ -e $DIYCONFIG ]; then
          cp -f $DIYCONFIG $OPENWRT_PATH/$DIYCONFIG
          cd $OPENWRT_PATH
          chmod +x $DIYCONFIG && ./$DIYCONFIG
          cd ..;
          echo "加载自定义配置成功：$DIYCONFIG"
        fi

    - name: 确认配置
      working-directory: ./openwrt
      run: |
        make defconfig

    - name: 下载工具包 Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        

    - name: 编译固件 Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 保存固件到bin目录下 Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: ax18
        path: openwrt/bin




