#=================================================
#
# Description: 自动生成固件
#=================================================

name:  Lin自用MiR3G

# 配置触发条件
on:
  release:
    types: [published]
  push:
    branches:
     - master
    paths:
     - 'ljw_mir3g.config'
     - 'diyconfig.sh'
     - 'configThirdApp.sh'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede  
  OPENWRT_DIR_NAME: openwrt
  REPO_BRANCH: master
  CONFIG_FILE: ljw_mir3g.config
  DIYCONFIG: diyconfig.sh
  THIRDAPPCONFIG: configThirdApp.sh
  FREE_UP_DISK: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

    - name: 下载当前源码
      uses: actions/checkout@master

    - name: 修改git下载缓冲大小
      run: git config --global http.postBuffer 524288000

    - name: 初始化环境 Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: 释放磁盘空间 Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: 下载Lean源码并设置Feeds

      run: |
        chmod +x linOpenwrtUpdateCodeAndFeeds.sh && ./linOpenwrtUpdateCodeAndFeeds.sh

    - name: 加载配置 Configuration Customization
      run: |
        rm -rf ./$OPENWRT_DIR_NAME/.config*
        if [ -e $CONFIG_FILE ]; then
          echo '查到配置文件，复制到.config中'
          cp -f $CONFIG_FILE $OPENWRT_DIR_NAME/.config;
          
        fi
    
    - name: 第三方app配置
      run: |
        if [ -e $THIRDAPPCONFIG ]; then
            cp -f $THIRDAPPCONFIG $OPENWRT_DIR_NAME/$THIRDAPPCONFIG
            cd $OPENWRT_DIR_NAME
            chmod +x $THIRDAPPCONFIG && ./$THIRDAPPCONFIG
        fi        

    - name: 加载DIY配置 Configuration Customization

      run: |
        echo $PWD
        if [ -e $DIYCONFIG ]; then
          echo '查到DIY文件，运行'
          cp -f $DIYCONFIG $OPENWRT_DIR_NAME/$DIYCONFIG
          cd $OPENWRT_DIR_NAME
          chmod +x $DIYCONFIG && ./$DIYCONFIG
          cd ..;
        fi

    - name: 确认配置
      working-directory: ./$OPENWRT_DIR_NAME
      run: |
        make defconfig

    - name: 下载工具包 Download package
      working-directory: ./$OPENWRT_DIR_NAME
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        

    - name: 编译固件 Build firmware
      working-directory: ./$OPENWRT_DIR_NAME
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name: 保存固件Github
      uses: actions/upload-artifact@master
      with:
        name: lin_mir3g
        path: $OPENWRT_DIR_NAME/bin
        paths:
          - $OPENWRT_DIR_NAME/bin
          - 'ljw_mir3g.config'
          - 'diyconfig.sh'
          - 'configThirdApp.sh'




